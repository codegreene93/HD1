{"ast":null,"code":"import Cookie from 'js-cookie';\nimport Axios from 'axios';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../constants/userConstants';\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    }); //Allows users data to be saved in the cookie\n\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); //Allows users data to be saved in the cookie\n\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin, register };","map":{"version":3,"sources":["C:/Users/Amy's PC/Documents/Honeyman Designs/frontend/src/actions/userActions.js"],"names":["Cookie","Axios","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,EAA6BC,mBAA7B,EAAkDC,gBAAlD,EAAoEC,qBAApE,EAA2FC,qBAA3F,EAAiHC,kBAAjH,QAA4I,4BAA5I;;AAGA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEV,mBAAP;AAA4BW,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMb,KAAK,CAACc,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,mBAAP;AAA4BU,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR,CAFE,CAGA;;AACFd,IAAAA,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACD,GALD,CAKC,OAAOK,KAAP,EAAc;AACTR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,gBAAP;AAAyBS,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAxC,KAAD,CAAR;AACL;AACF,CAVD;;AAYA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP,qBAAP;AAA8BQ,IAAAA,OAAO,EAAE;AAACS,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd;AAAvC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMb,KAAK,CAACc,IAAN,CAAW,qBAAX,EAAkC;AAACO,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAlC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,qBAAP;AAA8BO,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR,CAFE,CAGA;;AACFd,IAAAA,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACD,GALD,CAKC,OAAOK,KAAP,EAAc;AACTR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,kBAAP;AAA2BM,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA1C,KAAD,CAAR;AACL;AACF,CAVD;;AAWA,SAAQZ,MAAR,EAAgBa,QAAhB","sourcesContent":["import Cookie from 'js-cookie';\r\nimport Axios from 'axios';\r\nimport {USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,USER_REGISTER_FAIL } from  '../constants/userConstants';\r\n\r\n\r\nconst signin = (email, password) => async (dispatch) => {\r\n  dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\r\n  try {\r\n    const {data} = await Axios.post(\"/api/users/signin\", {email, password})\r\n    dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n      //Allows users data to be saved in the cookie\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  }catch (error) {\r\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\r\n  }\r\n}\r\n\r\nconst register = (name, email, password) => async (dispatch) => {\r\n  dispatch({type: USER_REGISTER_REQUEST, payload: {name, email, password}});\r\n  try {\r\n    const {data} = await Axios.post(\"/api/users/register\", {name, email, password})\r\n    dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n      //Allows users data to be saved in the cookie\r\n    Cookie.set('userInfo', JSON.stringify(data));\r\n  }catch (error) {\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.message});\r\n  }\r\n}\r\nexport {signin, register};\r\n"]},"metadata":{},"sourceType":"module"}