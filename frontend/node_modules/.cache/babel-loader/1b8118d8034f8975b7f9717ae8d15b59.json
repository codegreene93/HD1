{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from '../constants/productConstants';\nimport axios from 'axios';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProducts = ({\n  product\n} = async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('api/products', product, {\n      headers: {\n        'Authorization': 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n});\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProducts };","map":{"version":3,"sources":["C:/Users/Amy's PC/Documents/Honeyman Designs/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","axios","listProducts","dispatch","type","data","get","payload","error","message","saveProducts","product","getState","userSignin","userInfo","Axios","post","headers","token","detailsProduct","productId"],"mappings":"AAAA,SAAQA,oBAAR,EAA8BC,oBAA9B,EAAoDC,iBAApD,EACGC,uBADH,EAC2BC,uBAD3B,EACmDC,oBADnD,EAEGC,oBAFH,EAEyBC,oBAFzB,EAE8CC,iBAF9C,QAGQ,+BAHR;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;AAEE,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAC5C,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEZ;AAAP,KAAD,CAAR;AACA,UAAM;AAACa,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEX,oBAAP;AAA6Bc,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GAJD,CAKA,OAAMG,KAAN,EAAY;AACVL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,iBAAR;AAA2Ba,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CATD;;AAWA,MAAMC,YAAY,IAAG;AAACC,EAAAA;AAAD,IAAY,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC7D,MAAI;AACFT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,oBAAP;AAA6BS,MAAAA,OAAO,EAAEI;AAAtC,KAAD,CAAR;AACA,UAAM;AAACE,MAAAA,UAAU,EAAE;AAACC,QAAAA;AAAD;AAAb,QAA2BF,QAAQ,EAAzC;AACA,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMU,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BL,OAA3B,EAAoC;AAACM,MAAAA,OAAO,EAAE;AACjE,yBAAiB,WAAWH,QAAQ,CAACI;AAD4B;AAAV,KAApC,CAArB;AAGAf,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,oBAAP;AAA6BQ,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GAPD,CAOE,MAAM;AACNF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,iBAAP;AAA0BO,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AACF,CAXiB,CAAlB;;AAaA,MAAMU,cAAc,GAAIC,SAAD,IAAe,MAAOjB,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,uBAAR;AAAiCY,MAAAA,OAAO,EAAEa;AAA1C,KAAD,CAAR;AACA,UAAM;AAAEf,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,mBAAmBc,SAA7B,CAAvB;AACAjB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,uBAAR;AAAiCW,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,oBAAR;AAA8BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA7C,KAAD,CAAR;AACD;AACF,CARD;;AAUA,SAAQP,YAAR,EAAsBiB,cAAtB,EAAsCT,YAAtC","sourcesContent":["import {PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n   PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_FAIL,\r\n   PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS,PRODUCT_SAVE_FAIL\r\n } from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\n  const listProducts = () => async(dispatch) => {\r\n    try {\r\n      dispatch({type: PRODUCT_LIST_REQUEST});\r\n      const {data} = await axios.get(\"/api/products\");\r\n      dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    }\r\n    catch(error){\r\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n  }\r\n\r\n  const saveProducts = {product} = async (dispatch, getState) => {\r\n    try {\r\n      dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\r\n      const {userSignin: {userInfo}} = getState();\r\n      const {data} = await Axios.post('api/products', product, {headers: {\r\n        'Authorization': 'Bearer' + userInfo.token\r\n      }});\r\n      dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n    } catch {\r\n      dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\r\n    }\r\n  }\r\n\r\n  const detailsProduct = (productId) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n      const { data } = await axios.get(\"/api/products/\" + productId);\r\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n    }\r\n  }\r\n\r\n  export {listProducts, detailsProduct, saveProducts}\r\n"]},"metadata":{},"sourceType":"module"}